// generated by {{$.AppName}}, DO NOT EDIT.

package {{$.Namespace}}

import (
	"encoding/json"
	"fmt"
	"os"
	"path/filepath"
)

type {{$.ReaderName}} struct {
	Datas {{$.StorerName}}
}

type {{$.StorerName}} = map[{{$.PkeyTypeGo}}]{{$.StructName}}

func (this *{{$.ReaderName}}) FileName() string {
	return "{{$.FileJsonDataName}}"
}

func (this *{{$.ReaderName}}) FromFullPath(path string) error {
	data, err := os.ReadFile(path)

	if err != nil {
		return fmt.Errorf("{{$.ReaderName}}: from full path failed: %w", err)
	}

	return this.FromData(data)
}

func (this *{{$.ReaderName}}) FromHalfPath(path string) error {
	data, err := os.ReadFile(filepath.Join(path, this.FileName()))

	if err != nil {
		return fmt.Errorf("{{$.ReaderName}}: from half path failed: %w", err)
	}

	return this.FromData(data)
}

func (this *{{$.ReaderName}}) FromData(data []byte) error {
	datas := {{$.StorerName}}{}

	if err := json.Unmarshal(data, &datas); err != nil {
		return err
	}

	this.Datas = datas
	return nil
}
