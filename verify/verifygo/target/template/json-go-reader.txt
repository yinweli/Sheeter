// generated by {{$.AppName}}, DO NOT EDIT.

package {{$.NamespaceJson}}

import (
	"encoding/json"
	"fmt"
	"os"
	"path/filepath"
)

type {{$.ReaderName}} struct {
	{{$.StorerName}}
}

func (this *{{$.ReaderName}}) FileName() string {
	return "{{$.FileJsonData}}"
}

func (this *{{$.ReaderName}}) FromPathFull(path string) error {
	data, err := os.ReadFile(path)

	if err != nil {
		return fmt.Errorf("{{$.ReaderName}}: from path full failed: %w", err)
	}

	return this.FromData(data)
}

func (this *{{$.ReaderName}}) FromPathHalf(path string) error {
	data, err := os.ReadFile(filepath.Join(path, this.FileName()))

	if err != nil {
		return fmt.Errorf("{{$.ReaderName}}: from path half failed: %w", err)
	}

	return this.FromData(data)
}

func (this *{{$.ReaderName}}) FromData(data []byte) error {
	this.{{$.StorerName}} = {{$.StorerName}}{
		{{$.StorerDatas}}: map[{{$.PkeyTypeGo}}]{{$.StructName}}{},
	}

	if err := json.Unmarshal(data, &this.{{$.StorerName}}); err != nil {
		return err
	}

	return nil
}
