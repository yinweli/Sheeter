// Code generated by sheeter. DO NOT EDIT.
// Sheeter: https://github.com/yinweli/Sheeter

using Newtonsoft.Json;
using System.Collections.Generic;
using System.IO;

namespace sheeterJson {
    public partial class VerifyData1Reader {
        public static string FileName() {
            return "verifyData1.json";
        }

        public bool FromPath(string path) {
            return FromData(File.ReadAllText(Path.Combine(path, FileName())));
        }

        public bool FromData(string data) {
            Datas = JsonConvert.DeserializeObject<VerifyData1Storer>(data);
            return Datas != null;
        }

        public long[] MergePath(params string[] path) {
            var repeats = new List<long>();

            foreach (var itor in path) {
                try {
                    repeats.AddRange(MergeData(File.ReadAllText(Path.Combine(itor, FileName()))));
                } catch {
                    // do nothing
                }
            }

            return repeats.ToArray();
        }

        public long[] MergeData(string data) {
            var repeats = new List<long>();
            var tmpl = JsonConvert.DeserializeObject<VerifyData1Storer>(data);

            if (tmpl == null)
                return repeats.ToArray();

            if (Datas == null)
                Datas = new VerifyData1Storer();

            foreach (var itor in tmpl.Datas) {
                if (Data.ContainsKey(itor.Key) == false)
                    Data[itor.Key] = itor.Value;
                else
                    repeats.Add(itor.Key);
            }

            return repeats.ToArray();
        }

        public IDictionary<long, VerifyData1> Data {
            get {
                return Datas.Datas;
            }
        }

        private VerifyData1Storer Datas = null;
    }
}
