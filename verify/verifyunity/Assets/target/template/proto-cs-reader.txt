// Code generated by {{$.AppName}}. DO NOT EDIT.
// Sheeter: https://github.com/yinweli/Sheeter

using System.Collections.Generic;

namespace {{$.ProtoNamespace $.SimpleNamespace | $.FirstUpper}} {
    public partial class {{$.ReaderName}} {
        public string DataName() {
            return "{{$.ProtoDataName}}";
        }

        public string DataExt() {
            return "{{$.ProtoDataExt}}";
        }

        public string DataFile() {
            return "{{$.ProtoDataFile}}";
        }

        public bool FromData(byte[] data) {
            Datas = {{$.StorerName}}.Parser.ParseFrom(data);
            return Datas != null;
        }

        public {{$.PkeyTypeCs}}[] MergeData(byte[] data) {
            var repeats = new List<{{$.PkeyTypeCs}}>();
            var tmpl = {{$.StorerName}}.Parser.ParseFrom(data);

            if (tmpl == null)
                return repeats.ToArray();

            if (Datas == null)
                Datas = new {{$.StorerName}}();

            foreach (var itor in tmpl.{{$.StorerDatas}}) {
                if (Data.ContainsKey(itor.Key) == false)
                    Data[itor.Key] = itor.Value;
                else
                    repeats.Add(itor.Key);
            }

            return repeats.ToArray();
        }

        public IDictionary<{{$.PkeyTypeCs}}, {{$.StructName}}> Data {
            get {
                return Datas.{{$.StorerDatas}};
            }
        }

        private {{$.StorerName}} Datas = null;
    }
}
