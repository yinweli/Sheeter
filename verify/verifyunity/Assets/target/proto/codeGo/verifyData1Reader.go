// Code generated by sheeter. DO NOT EDIT.
// Sheeter: https://github.com/yinweli/Sheeter

package sheeterProto

import (
	"fmt"
	"os"
	"path/filepath"

	"google.golang.org/protobuf/proto"
)

type VerifyData1Reader struct {
	*VerifyData1Storer
}

func (this *VerifyData1Reader) FileName() string {
	return "verifyData1.bytes"
}

func (this *VerifyData1Reader) FromPath(path string) error {
	data, err := os.ReadFile(filepath.Join(path, this.FileName()))

	if err != nil {
		return fmt.Errorf("VerifyData1Reader: from path failed: %w", err)
	}

	return this.FromData(data)
}

func (this *VerifyData1Reader) FromData(data []byte) error {
	this.VerifyData1Storer = &VerifyData1Storer{
		Datas: map[int64]*VerifyData1{},
	}

	if err := proto.Unmarshal(data, this.VerifyData1Storer); err != nil {
		return fmt.Errorf("VerifyData1Reader: from data failed: %w", err)
	}

	return nil
}

func (this *VerifyData1Reader) MergePath(path ...string) (repeats []int64) {
	for _, itor := range path {
		if data, err := os.ReadFile(filepath.Join(itor, this.FileName())); err == nil {
			repeats = append(repeats, this.MergeData(data)...)
		}
	}

	return repeats
}

func (this *VerifyData1Reader) MergeData(data []byte) (repeats []int64) {
	tmpl := &VerifyData1Storer{
		Datas: map[int64]*VerifyData1{},
	}

	if err := proto.Unmarshal(data, tmpl); err != nil {
		return repeats
	}

	if this.VerifyData1Storer == nil {
		this.VerifyData1Storer = &VerifyData1Storer{
			Datas: map[int64]*VerifyData1{},
		}
	}

	for k, v := range tmpl.Datas {
		if _, ok := this.VerifyData1Storer.Datas[k]; ok == false {
			this.VerifyData1Storer.Datas[k] = v
		} else {
			repeats = append(repeats, k)
		}
	}

	return repeats
}
