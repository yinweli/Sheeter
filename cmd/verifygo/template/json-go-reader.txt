// generated by sheeter, DO NOT EDIT.

package {{$.Named.Namespace}}

import (
	"encoding/json"
	"os"
	"strconv"
)

type {{$.Named.ReaderName}} map[int64]{{$.Named.StructName}}

var Json = "{{$.Named.FileJsonCode}}"

func FromJsonFile(path string) (reader {{$.Named.ReaderName}}, err error) {
	data, err := os.ReadFile(path)

	if err != nil {
		return nil, err
	}

	return FromJsonBytes(data)
}

func FromJsonBytes(data []byte) (reader {{$.Named.ReaderName}}, err error) {
	temps := map[string]{{$.Named.StructName}}{}

	if err := json.Unmarshal(data, &temps); err != nil {
		return nil, err
	}

	datas := {{$.Named.ReaderName}}{}

	for key, value := range temps {
		k, err := strconv.ParseInt(key, 10, 64)

		if err != nil {
			return nil, err
		}

		datas[k] = value
	}

	return datas, nil
}
