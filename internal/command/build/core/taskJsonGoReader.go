package core

import (
	"fmt"

	"github.com/yinweli/Sheeter/internal/util"
)

// json-go讀取器模板內容
const goReaderContent = `// generated by {{$.Namespace}}, DO NOT EDIT.

package {{$.Namespace}}

import "encoding/json"

type {{$.ReaderName}} map[string]{{$.StructName}}

func (this *{{$.ReaderName}}) JsonFileName() string {
	return "{{$.JsonFileName}}"
}

func (this *{{$.ReaderName}}) FromJson(data []byte) error {
    return json.Unmarshal(data, this)
}
`

// runJsonGoReader 輸出json-go讀取器, 由於quicktype對於結構命名有不一致的問題, 所以採取資料結構由quicktype執行, 而資料列表由模板執行的方式
func (this *Task) runJsonGoReader() error {
	err := util.TmplWrite(this.jsonGoReaderFilePath(), this.global.Bom, goReaderContent, &TmplGoReader{
		JsonFileName: this.jsonFileName(),
		Namespace:    this.namespace(),
		StructName:   this.structName(),
		ReaderName:   this.readerName(),
	})

	if err != nil {
		return fmt.Errorf("generate goReader failed: %s\n%w", this.originalName(), err)
	} // if

	if this.bar != nil {
		this.bar.Increment()
	} // if

	return nil
}

// TmplGoReader json-go讀取器模板資料
type TmplGoReader struct {
	JsonFileName string // json檔名
	Namespace    string // 命名空間
	StructName   string // 結構名稱
	ReaderName   string // 讀取器名稱
}
