package core

import (
	"os"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/yinweli/Sheeter/testdata"
)

func TestGoReader(t *testing.T) {
	dir := testdata.ChangeWorkDir()
	defer testdata.RestoreWorkDir(dir)

	task := mockTaskGoReader()
	err := task.runJsonGoReader()
	assert.Nil(t, err)
	bytes, err := os.ReadFile(task.jsonGoReaderFilePath())
	assert.Nil(t, err)
	assert.Equal(t, mockTaskGoReaderString(), string(bytes))
	task.close()

	task = mockTaskGoReader()
	task.element.Excel = testdata.UnknownStr
	err = task.runJsonGoReader()
	assert.NotNil(t, err)
	task.close()

	task = mockTaskGoReader()
	task.element.Sheet = testdata.UnknownStr
	err = task.runJsonGoReader()
	assert.NotNil(t, err)
	task.close()

	err = os.RemoveAll(pathJsonGo)
	assert.Nil(t, err)
}

func mockTaskGoReader() *Task {
	return &Task{
		global: &Global{},
		element: &Element{
			Excel: testdata.RealExcel,
			Sheet: testdata.SheetName,
		},
	}
}

func mockTaskGoReaderString() string {
	return `// generated by sheeter, DO NOT EDIT.

package sheeter

import "encoding/json"

type RealDataReader map[string]RealData

func (this *RealDataReader) JsonFileName() string {
	return "realData.json"
}

func (this *RealDataReader) FromJson(data []byte) error {
    return json.Unmarshal(data, this)
}
`
}
