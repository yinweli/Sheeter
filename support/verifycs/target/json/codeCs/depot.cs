// Code generated by sheeter. DO NOT EDIT.
// Sheeter: https://github.com/yinweli/Sheeter

using System.Collections.Generic;

namespace SheeterJson {
    public partial class Depot {
        public readonly VerifyData1Reader VerifyData1 = new VerifyData1Reader();
        public readonly VerifyData2Reader VerifyData2 = new VerifyData2Reader();
        private readonly List<ReaderInterface> Readers = new List<ReaderInterface>();

        public Depot() {
            Readers.Add(VerifyData1);
            Readers.Add(VerifyData2);
        }

        public bool FromData(DelegateLoad load, DelegateError error) {
            var result = true;

            foreach (var itor in Readers) {
                var data = load(itor.DataName(), itor.DataExt());

                if (data == null || data.Length == 0)
                    continue;

                var message = itor.FromData(data);

                if (message.Length != 0) {
                    result = false;
                    error(itor.DataName(), message);
                }
            }

            return result;
        }

        public bool MergeData(DelegateLoad load, DelegateError error) {
            var result = true;

            foreach (var itor in Readers) {
                var data = load(itor.DataName(), itor.DataExt());

                if (data == null || data.Length == 0)
                    continue;

                var message = itor.MergeData(data);

                if (message.Length != 0) {
                    result = false;
                    error(itor.DataName(), message);
                }
            }

            return result;
        }

        public delegate void DelegateError(string name, string message);
        public delegate string DelegateLoad(string name, string ext);
    }

    public interface ReaderInterface {
        public string DataName();
        public string DataExt();
        public string DataFile();
        public string FromData(string data);
        public string MergeData(string data);
    }
}
