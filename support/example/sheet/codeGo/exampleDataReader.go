// Code generated by sheeter. DO NOT EDIT.
// Sheeter: https://github.com/yinweli/Sheeter

package sheeter

import (
	"encoding/json"
	"fmt"
)

// ExampleData example.xlsx#Data
type ExampleData struct {
	Name1 int32 `json:"Name1"` // note1
	Name2 int32 `json:"Name2"` // note2
	Name3 int32 `json:"Name3"` // note3
	Name4 int32 `json:"Name4"` // note4
	Pkey int32 `json:"Pkey"` // pkey
}

// ExampleDataReader example.xlsx#Data
type ExampleDataReader struct {
	Data map[int32]*ExampleData // 資料列表
}

// FileName 取得檔名物件
func (this *ExampleDataReader) FileName() FileName {
	return NewFileName("exampleData", ".json")
}

// FromData 讀取資料
func (this *ExampleDataReader) FromData(data []byte, clear bool) error {
	tmpl := map[int32]*ExampleData{}

	if err := json.Unmarshal(data, &tmpl); err != nil {
		return fmt.Errorf("from data: %w", err)
	} // if

	if clear || this.Data == nil {
		this.Data = map[int32]*ExampleData{}
	} // if

	for k, v := range tmpl {
		if _, ok := this.Data[k]; ok {
			return fmt.Errorf("from data: key duplicate")
		} // if

		this.Data[k] = v
	} // for

	return nil
}

// Clear 清除資料
func (this *ExampleDataReader) Clear() {
	this.Data = nil
}

// Get 取得資料
func (this *ExampleDataReader) Get(key int32) *ExampleData {
	if result, ok := this.Data[key]; ok {
		return result
	} // if

	return nil
}

// Keys 取得索引列表
func (this *ExampleDataReader) Keys() (result []int32) {
	for itor := range this.Data {
		result = append(result, itor)
	} // for

	return result
}

// Values 取得資料列表
func (this *ExampleDataReader) Values() (result []*ExampleData) {
	for _, itor := range this.Data {
		result = append(result, itor)
	} // for

	return result
}

// ValuesAny 取得資料列表
func (this *ExampleDataReader) ValuesAny() (result []any) {
	for _, itor := range this.Data {
		result = append(result, itor)
	} // for

	return result
}

// Count 取得資料數量
func (this *ExampleDataReader) Count() int {
	return len(this.Data)
}
